{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LoginScreen from \"./src/containers/LoginScreen\";\nimport HomeScreen from \"./src/containers/HomeScreen\";\nimport RoommateViewPostScreen from \"./src/containers/RoommateViewPostScreen\";\nimport RoomViewPostScreen from \"./src/containers/RoomViewPostScreen\";\nimport FavouriteScreen from \"./src/containers/FavouriteScreen\";\nimport ProfileScreen from \"./src/containers/ProfileScreen\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction LoginStack() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"LoginScreen\",\n      component: LoginScreen,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n}\n\nfunction HomeStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"HomeScreen\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"RoommateViewPostScreen\",\n      component: RoommateViewPostScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"RoomViewPostScreen\",\n      component: RoomViewPostScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nfunction ProfileStack() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      }\n    })\n  });\n}\n\nexport default function App() {\n  return _jsxs(NavigationContainer, {\n    children: [_jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          headerShown: false,\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === 'Home') {\n              iconName = \"home\";\n            } else if (route.name === 'Favourite') {\n              iconName = \"star\";\n            } else if (route.name === 'Profile') {\n              iconName = \"person\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: '#6E4119',\n          tabBarInactiveTintColor: 'black',\n          tabBarInactiveBackgroundColor: '#FFEDDD',\n          tabBarActiveBackgroundColor: '#FFEDDD'\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeStack\n      }), _jsx(Tab.Screen, {\n        name: \"Favourite\",\n        component: FavouriteStack\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileStack\n      })]\n    }), \":\", _jsx(Stack.Navigator, {\n      children: _jsx(Stack.Screen, {\n        name: \"FavouriteScreen\",\n        component: FavouriteScreen,\n        options: {\n          headerShown: false\n        }\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","LoginScreen","HomeScreen","RoommateViewPostScreen","RoomViewPostScreen","FavouriteScreen","ProfileScreen","Ionicons","NavigationContainer","createBottomTabNavigator","createStackNavigator","Stack","Tab","LoginStack","headerShown","HomeStack","ProfileStack","App","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarInactiveBackgroundColor","tabBarActiveBackgroundColor","FavouriteStack"],"sources":["C:/Users/kasthuri/Desktop/roomarch/roomarch/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport LoginScreen from './src/containers/LoginScreen';\r\nimport HomeScreen from './src/containers/HomeScreen';\r\nimport RoommateViewPostScreen from './src/containers/RoommateViewPostScreen';\r\nimport RoomViewPostScreen from './src/containers/RoomViewPostScreen';\r\nimport FavouriteScreen from './src/containers/FavouriteScreen';\r\nimport ProfileScreen from './src/containers/ProfileScreen';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\n\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\nfunction LoginStack() {\r\n  return (\r\n      <Stack.Navigator >\r\n        <Stack.Screen  name=\"LoginScreen\" component={LoginScreen} options={{headerShown: false}}/>\r\n      </Stack.Navigator>\r\n    \r\n  );\r\n}\r\n\r\n\r\nfunction HomeStack() {\r\n  return (\r\n      <Stack.Navigator >\r\n        <Stack.Screen  name=\"HomeScreen\" component={HomeScreen} options={{headerShown: false}}/>\r\n        <Stack.Screen  name=\"RoommateViewPostScreen\" component={RoommateViewPostScreen} options={{headerShown: false}}/>\r\n        <Stack.Screen  name=\"RoomViewPostScreen\" component={RoomViewPostScreen} options={{headerShown: false}}/>\r\n      </Stack.Navigator>\r\n    \r\n  );\r\n}\r\n// function FavouriteStack() {\r\n//   return (\r\n//       <Stack.Navigator >\r\n//         <Stack.Screen  name=\"FavouriteScreen\" component={FavouriteScreen} options={{headerShown: false}}/>\r\n//       </Stack.Navigator>\r\n    \r\n//   );\r\n// }\r\nfunction ProfileStack() {\r\n  return (\r\n      <Stack.Navigator >\r\n        <Stack.Screen  name=\"ProfileScreen\" component={ProfileScreen} options={{headerShown: false}}/>\r\n      </Stack.Navigator>\r\n    \r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({ \r\n          headerShown: false,\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n\r\n            let iconName;\r\n\r\n            if (route.name === 'Home') {\r\n              iconName = \"home\"\r\n            } else if (route.name === 'Favourite') {\r\n              iconName = \"star\"\r\n            } else if (route.name === 'Profile') {\r\n              iconName = \"person\"\r\n            }\r\n            \r\n\r\n            \r\n            // You can return any component that you like here!\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n                    \r\n          },\r\n          tabBarActiveTintColor: '#6E4119',\r\n          tabBarInactiveTintColor: 'black',\r\n          tabBarInactiveBackgroundColor: '#FFEDDD',\r\n          tabBarActiveBackgroundColor: '#FFEDDD',\r\n          \r\n        })}\r\n      >\r\n        <Tab.Screen name=\"Home\" component={HomeStack} />\r\n        <Tab.Screen name=\"Favourite\" component={FavouriteStack} />\r\n        <Tab.Screen name=\"Profile\" component={ProfileStack} />\r\n      </Tab.Navigator> \r\n      :\r\n      <Stack.Navigator >\r\n      <Stack.Screen  name=\"FavouriteScreen\" component={FavouriteScreen} options={{headerShown: false}}/>\r\n      </Stack.Navigator>\r\n      \r\n    </NavigationContainer>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}