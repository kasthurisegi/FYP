{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useEffect, useState, useReducer, useContext, useRef } from \"react\";\nimport { auth, db } from \"../../FirebaseConfig\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getDoc, onSnapshot, collection, query, where } from \"firebase/firestore\";\nimport { UserInfoContext } from \"./userInfoContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var DataProcessorContext = createContext();\nexport var DataProcessorContextProvider = function DataProcessorContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useContext = useContext(UserInfoContext),\n      userID = _useContext.userID;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roommate = _useState4[0],\n      setRoommate = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      room = _useState6[0],\n      setRoom = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      favorite = _useState8[0],\n      setFavorite = _useState8[1];\n\n  useEffect(function () {\n    if (userID) {\n      var unsub = onSnapshot(doc(db, \"users\", userID), function (doc) {\n        setCurrentUser(doc.data());\n        return;\n      });\n      var q = query(collection(db, \"favorite\"), where(\"userID\", \"==\", userID));\n      var unsubscribe = onSnapshot(q, function (querySnapshot) {\n        var favorites = [];\n        querySnapshot.forEach(function (doc) {\n          favorites.push(doc.data());\n        });\n        setFavorite(favorites);\n      });\n      return function () {\n        unsub, unsubscribe;\n      };\n    }\n  }, [userID]);\n  useEffect(function () {\n    var q = query(collection(db, \"roommates\"), where(\"roommateID\", \"!=\", \"\"));\n    var unsubscribeRoommate = onSnapshot(q, function (querySnapshot) {\n      var roommates = [];\n      querySnapshot.forEach(function (doc) {\n        roommates.push(doc.data());\n      });\n      setRoommate(roommates);\n    });\n    var q1 = query(collection(db, \"room\"), where(\"roomID\", \"!=\", \"\"));\n    var unsubscribeRoom = onSnapshot(q1, function (querySnapshot) {\n      var room = [];\n      querySnapshot.forEach(function (doc) {\n        room.push(doc.data());\n      });\n      setRoom(room);\n    });\n    return function () {\n      unsubscribeRoommate, unsubscribeRoom;\n    };\n  }, []);\n  var INITIAL_SELECTED_ROOMMATE = null;\n\n  var selectRoommateReducer = function selectRoommateReducer(state, action) {\n    switch (action.type) {\n      case \"CHANGE_ROOMMATE\":\n        return action.payload;\n    }\n\n    ;\n  };\n\n  var _useReducer = useReducer(selectRoommateReducer, INITIAL_SELECTED_ROOMMATE),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      selectedRoommate = _useReducer2[0],\n      dispatchSelectRoommate = _useReducer2[1];\n\n  return _jsx(DataProcessorContext.Provider, {\n    value: {\n      currentUser: currentUser,\n      roommate: roommate,\n      selectedRoommate: selectedRoommate,\n      dispatchSelectRoommate: dispatchSelectRoommate,\n      favorite: favorite,\n      room: room,\n      selectedRoom: selectedRoom,\n      dispatchSelectRoom: dispatchSelectRoom\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useEffect","useState","useReducer","useContext","useRef","auth","db","onAuthStateChanged","doc","getDoc","onSnapshot","collection","query","where","UserInfoContext","DataProcessorContext","DataProcessorContextProvider","children","userID","currentUser","setCurrentUser","roommate","setRoommate","room","setRoom","favorite","setFavorite","unsub","data","q","unsubscribe","querySnapshot","favorites","forEach","push","unsubscribeRoommate","roommates","q1","unsubscribeRoom","INITIAL_SELECTED_ROOMMATE","selectRoommateReducer","state","action","type","payload","selectedRoommate","dispatchSelectRoommate","selectedRoom","dispatchSelectRoom"],"sources":["/Users/eason/Desktop/git-project/FYP/src/context/DataProcessor.js"],"sourcesContent":["\nimport React, { createContext, useEffect, useState, useReducer, useContext, useRef } from \"react\";\nimport { auth, db } from \"../../FirebaseConfig\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getDoc, onSnapshot, collection, query, where } from \"firebase/firestore\";\nimport { UserInfoContext } from \"./userInfoContext\";\n\nexport const DataProcessorContext = createContext();\n\nexport const DataProcessorContextProvider = ({ children }) => {\n\n    const { userID } = useContext(UserInfoContext);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [roommate, setRoommate] = useState(null);\n    const [room, setRoom] = useState(null);\n    const [favorite, setFavorite] = useState(null);\n\n    useEffect(() => {\n\n        if(userID){\n            const unsub = onSnapshot(doc(db, \"users\", userID), (doc) => {\n                setCurrentUser(doc.data())\n                return;\n            });\n\n            const q = query(collection(db, \"favorite\"), where(\"userID\", \"==\", userID));\n            const unsubscribe = onSnapshot(q, (querySnapshot) => {\n            const favorites = [];\n            querySnapshot.forEach((doc) => {\n                favorites.push(doc.data());\n            });\n            setFavorite(favorites)\n            });\n\n            return () => {\n                unsub,\n                unsubscribe\n            }\n        }\n\n    },[userID]);\n\n    useEffect(() => {\n\n        const q = query(collection(db, \"roommates\"), where(\"roommateID\", \"!=\", \"\"));\n        const unsubscribeRoommate = onSnapshot(q, (querySnapshot) => {\n        const roommates = [];\n        querySnapshot.forEach((doc) => {\n            roommates.push(doc.data());\n        });\n        setRoommate(roommates)\n        });\n\n        const q1 = query(collection(db, \"room\"), where(\"roomID\", \"!=\", \"\"));\n        const unsubscribeRoom = onSnapshot(q1, (querySnapshot) => {\n        const room = [];\n        querySnapshot.forEach((doc) => {\n            room.push(doc.data());\n        });\n        setRoom(room)\n        });\n\n        return () => {\n            unsubscribeRoommate,\n            unsubscribeRoom\n        }\n\n    },[]);\n\n    const INITIAL_SELECTED_ROOMMATE = null;\n\n    const selectRoommateReducer = (state, action) => {\n        switch(action.type){\n            case \"CHANGE_ROOMMATE\":\n                return action.payload\n        };\n    };\n\n    const [selectedRoommate, dispatchSelectRoommate] = useReducer(selectRoommateReducer, INITIAL_SELECTED_ROOMMATE);\n\n    return (\n        <DataProcessorContext.Provider value={{\n            currentUser: currentUser,\n            roommate: roommate,\n            selectedRoommate: selectedRoommate,\n            dispatchSelectRoommate,\n            favorite: favorite,\n            room: room,\n            selectedRoom: selectedRoom,\n            dispatchSelectRoom,\n        }}>\n            {children}\n        </DataProcessorContext.Provider>\n    );\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}