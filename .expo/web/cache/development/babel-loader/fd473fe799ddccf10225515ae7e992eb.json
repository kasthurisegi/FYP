{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useEffect, useState, useReducer, useContext, useRef } from \"react\";\nimport { auth, db } from \"../../FirebaseConfig\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var UserInfoContext = createContext();\nexport var UserInfoContextProvider = function UserInfoContextProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loginState = _useState2[0],\n    setLoginState = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userID = _useState4[0],\n    setUserID = _useState4[1];\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var uid = user.uid;\n        setLoginState(true);\n        setUserID(uid);\n      } else {\n        setLoginState(false);\n      }\n    });\n  }, []);\n  return _jsx(UserInfoContext.Provider, {\n    value: {\n      loginState: loginState,\n      userID: userID\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useEffect","useState","useReducer","useContext","useRef","auth","db","onAuthStateChanged","doc","getDoc","UserInfoContext","UserInfoContextProvider","children","loginState","setLoginState","userID","setUserID","user","uid"],"sources":["C:/Users/kasthuri/Desktop/roomarchh/FYP/src/context/userInfoContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState, useReducer, useContext, useRef } from \"react\";\r\nimport { auth, db } from \"../../FirebaseConfig\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\nexport const UserInfoContext = createContext();\r\n\r\nexport const UserInfoContextProvider = ({ children }) => {\r\n\r\n    const [loginState, setLoginState] = useState(false);\r\n    const [userID, setUserID] = useState(null);\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                // User is signed in, see docs for a list of available properties\r\n                // https://firebase.google.com/docs/reference/js/firebase.User\r\n                const uid = user.uid;\r\n                setLoginState(true)\r\n                setUserID(uid)\r\n        \r\n            } else {\r\n                // User is signed out\r\n                // ...\r\n                setLoginState(false)\r\n            }\r\n            });\r\n    },[])\r\n\r\n    return (\r\n        <UserInfoContext.Provider value={{\r\n            loginState: loginState,\r\n            userID: userID\r\n        }}>\r\n            {children}\r\n        </UserInfoContext.Provider>\r\n    );\r\n\r\n};"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACjG,SAASC,IAAI,EAAEC,EAAE;AACjB,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAAC;AAEjD,OAAO,IAAMC,eAAe,GAAGX,aAAa,EAAE;AAE9C,OAAO,IAAMY,uBAAuB,GAAG,SAA1BA,uBAAuB,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EAE9C,gBAAoCX,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CY,UAAU;IAAEC,aAAa;EAChC,iBAA4Bb,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAnCc,MAAM;IAAEC,SAAS;EAExBhB,SAAS,CAAC,YAAM;IACZO,kBAAkB,CAACF,IAAI,EAAE,UAACY,IAAI,EAAK;MAC/B,IAAIA,IAAI,EAAE;QAGN,IAAMC,GAAG,GAAGD,IAAI,CAACC,GAAG;QACpBJ,aAAa,CAAC,IAAI,CAAC;QACnBE,SAAS,CAACE,GAAG,CAAC;MAElB,CAAC,MAAM;QAGHJ,aAAa,CAAC,KAAK,CAAC;MACxB;IACA,CAAC,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;EAEL,OACI,KAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAE;MAC7BD,UAAU,EAAEA,UAAU;MACtBE,MAAM,EAAEA;IACZ,CAAE;IAAA,UACGH;EAAQ,EACc;AAGnC,CAAC"},"metadata":{},"sourceType":"module"}