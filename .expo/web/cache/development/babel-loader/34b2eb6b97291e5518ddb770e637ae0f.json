{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LoginScreen from \"./src/containers/LoginScreen\";\nimport HomeScreen from \"./src/containers/HomeScreen\";\nimport RoommateViewPostScreen from \"./src/containers/RoommateViewPostScreen\";\nimport RoomViewPostScreen from \"./src/containers/RoomViewPostScreen\";\nimport FavouriteScreen from \"./src/containers/FavouriteScreen\";\nimport ProfileScreen from \"./src/containers/ProfileScreen\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction LoginStack() {\n  return _jsx(Stack.Screen, {\n    name: \"LoginScreen\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    }\n  });\n}\n\nfunction HomeStack() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"HomeScreen\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"RoommateViewPostScreen\",\n      component: RoommateViewPostScreen,\n      options: {\n        title: 'Find Roommate',\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#D6B598'\n        },\n        headerTintColor: '#000000',\n        headerTitleStyle: {\n          fontSize: '24px',\n          fontWeight: 'bold'\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"RoomViewPostScreen\",\n      component: RoomViewPostScreen,\n      options: {\n        title: 'Find Room',\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#D6B598'\n        },\n        headerTintColor: '#000000',\n        headerTitleStyle: {\n          fontSize: '24px',\n          fontWeight: 'bold'\n        }\n      }\n    })]\n  });\n}\n\nfunction FavouriteStack() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"FavouriteScreen\",\n      component: FavouriteScreen,\n      options: {\n        title: 'Favourite',\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#D6B598'\n        },\n        headerTintColor: '#000000',\n        headerTitleStyle: {\n          fontSize: '24px',\n          fontWeight: 'bold'\n        }\n      }\n    })\n  });\n}\n\nfunction ProfileStack() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      options: {\n        title: 'Profile',\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#D6B598'\n        },\n        headerTintColor: '#000000',\n        headerTitleStyle: {\n          fontSize: '24px',\n          fontWeight: 'bold'\n        }\n      }\n    })\n  });\n}\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginState = _useState2[0],\n      setLoginState = _useState2[1];\n\n  return _jsx(NavigationContainer, {\n    children: _jsx(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          headerShown: false,\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n                color = _ref2.color,\n                size = _ref2.size;\n            var iconName;\n\n            if (route.name === 'Home') {\n              iconName = \"home\";\n            } else if (route.name === 'Favourite') {\n              iconName = \"star\";\n            } else if (route.name === 'Profile') {\n              iconName = \"person\";\n            }\n\n            ;\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: '#6E4119',\n          tabBarInactiveTintColor: 'black',\n          tabBarInactiveBackgroundColor: '#FFEDDD',\n          tabBarActiveBackgroundColor: '#D6B598'\n        };\n      },\n      children: loginState ? _jsxs(_Fragment, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Profile\",\n          component: ProfileStack\n        }), _jsx(Tab.Screen, {\n          name: \"Home\",\n          component: HomeStack\n        }), _jsx(Tab.Screen, {\n          name: \"Favourite\",\n          component: FavouriteStack\n        })]\n      }) : _jsx(Tab.Screen, {\n        name: \"Login\",\n        component: LoginStack\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","StatusBar","LoginScreen","HomeScreen","RoommateViewPostScreen","RoomViewPostScreen","FavouriteScreen","ProfileScreen","Ionicons","NavigationContainer","createBottomTabNavigator","createStackNavigator","Stack","Tab","LoginStack","headerShown","HomeStack","title","headerTitleAlign","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontSize","fontWeight","FavouriteStack","ProfileStack","App","loginState","setLoginState","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarInactiveBackgroundColor","tabBarActiveBackgroundColor"],"sources":["/Users/eason/Desktop/git-project/FYP/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View } from 'react-native';\nimport LoginScreen from './src/containers/LoginScreen';\nimport HomeScreen from './src/containers/HomeScreen';\nimport RoommateViewPostScreen from './src/containers/RoommateViewPostScreen';\nimport RoomViewPostScreen from './src/containers/RoomViewPostScreen';\nimport FavouriteScreen from './src/containers/FavouriteScreen';\nimport ProfileScreen from './src/containers/ProfileScreen';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n\nfunction LoginStack() {\n  return(\n    <Stack.Screen  \n      name=\"LoginScreen\" \n      component={LoginScreen} \n      options={{headerShown: false}}/>\n  )\n}\n\nfunction HomeStack() {\n  return (\n      <Stack.Navigator >\n        \n\n        <Stack.Screen  \n          name=\"HomeScreen\" \n          component={HomeScreen} \n          options={{headerShown: false}}/>\n\n        <Stack.Screen  \n          name=\"RoommateViewPostScreen\" \n          component={RoommateViewPostScreen} \n          options={{title: 'Find Roommate',\n                    headerTitleAlign: 'center',\n                    headerStyle: {\n                      backgroundColor: '#D6B598',\n                    },\n                    headerTintColor: '#000000',\n                    headerTitleStyle: {\n                      fontSize: '24px',\n                      fontWeight: 'bold',\n                    },\n                    }}/>\n\n        <Stack.Screen  \n        name=\"RoomViewPostScreen\" \n        component={RoomViewPostScreen} \n        options={{title: 'Find Room',\n                  headerTitleAlign: 'center',\n                  headerStyle: {\n                    backgroundColor: '#D6B598',\n                  },\n                  headerTintColor: '#000000',\n                  headerTitleStyle: {\n                    fontSize: '24px',\n                    fontWeight: 'bold',\n                  },\n                  }}/>\n\n      </Stack.Navigator>\n    \n  );\n}\nfunction FavouriteStack() {\n  return (\n      <Stack.Navigator >\n        <Stack.Screen  \n        name=\"FavouriteScreen\" \n        component={FavouriteScreen} \n        options={{title: 'Favourite', \n                  headerTitleAlign: 'center',\n                  headerStyle: {\n                    backgroundColor: '#D6B598',\n                  },\n                  headerTintColor: '#000000',\n                  headerTitleStyle: {\n                    fontSize: '24px',\n                    fontWeight: 'bold',\n                  }, \n                  }}/>\n      </Stack.Navigator>\n    \n  );\n}\nfunction ProfileStack() {\n  return (\n      <Stack.Navigator >\n        <Stack.Screen  \n        name=\"ProfileScreen\" \n        component={ProfileScreen} \n        options={{title: 'Profile', \n                  headerTitleAlign: 'center',\n                  headerStyle: {\n                    backgroundColor: '#D6B598',\n                  },\n                  headerTintColor: '#000000',\n                  headerTitleStyle: {\n                    fontSize: '24px',\n                    fontWeight: 'bold',\n                  }, \n                  }}/>\n      </Stack.Navigator>\n    \n  );\n}\n\nexport default function App() {\n\n  const [loginState, setLoginState] = useState(false);\n\n  return (\n    <NavigationContainer>\n\n      <Tab.Navigator\n        screenOptions={({ route }) => ({ \n          headerShown: false,\n          tabBarIcon: ({ focused, color, size }) => {\n\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = \"home\"\n            } else if (route.name === 'Favourite') {\n              iconName = \"star\"\n            } else if (route.name === 'Profile') {\n              iconName = \"person\"\n            };\n            \n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n                    \n          },\n          tabBarActiveTintColor: '#6E4119',\n          tabBarInactiveTintColor: 'black',\n          tabBarInactiveBackgroundColor: '#FFEDDD',\n          tabBarActiveBackgroundColor: '#D6B598',\n          \n        })}\n      >\n        {loginState ? \n          <>\n            <Tab.Screen name=\"Profile\" component={ProfileStack} />\n            <Tab.Screen name=\"Home\" component={HomeStack} />\n            <Tab.Screen name=\"Favourite\" component={FavouriteStack} />\n          </>\n          :\n          <Tab.Screen name=\"Login\" component={LoginStack}/>\n        }\n        \n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}