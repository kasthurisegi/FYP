{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useEffect, useState, useReducer, useContext, useRef } from \"react\";\nimport { auth, db } from \"../../FirebaseConfig\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var UserInfoContext = createContext();\nexport var UserInfoContextProvider = function UserInfoContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginState = _useState2[0],\n      setLoginState = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userID = _useState4[0],\n      setUserID = _useState4[1];\n\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      if (user) {\n        var uid = user.uid;\n        setLoginState(true);\n        setUserID(uid);\n      } else {\n        setLoginState(false);\n      }\n    });\n  }, []);\n  return _jsx(UserInfoContext.Provider, {\n    value: {\n      loginState: loginState,\n      userID: userID\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useEffect","useState","useReducer","useContext","useRef","auth","db","onAuthStateChanged","doc","getDoc","UserInfoContext","UserInfoContextProvider","children","loginState","setLoginState","userID","setUserID","user","uid"],"sources":["/Users/eason/Desktop/git-project/FYP/src/context/userInfoContext.js"],"sourcesContent":["import React, { createContext, useEffect, useState, useReducer, useContext, useRef } from \"react\";\nimport { auth, db } from \"../../FirebaseConfig\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getDoc } from \"firebase/firestore\";\n\nexport const UserInfoContext = createContext();\n\nexport const UserInfoContextProvider = ({ children }) => {\n\n    const [loginState, setLoginState] = useState(false);\n    const [userID, setUserID] = useState(null);\n\n    useEffect(() => {\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n                // User is signed in, see docs for a list of available properties\n                // https://firebase.google.com/docs/reference/js/firebase.User\n                const uid = user.uid;\n                setLoginState(true)\n                setUserID(uid)\n        \n            } else {\n                // User is signed out\n                // ...\n                setLoginState(false)\n            }\n            });\n    },[])\n\n    return (\n        <UserInfoContext.Provider value={{\n            loginState: loginState,\n            userID: userID\n        }}>\n            {children}\n        </UserInfoContext.Provider>\n    );\n\n};"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,EAAoDC,UAApD,EAAgEC,UAAhE,EAA4EC,MAA5E,QAA0F,OAA1F;AACA,SAASC,IAAT,EAAeC,EAAf;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;;AAEA,OAAO,IAAMC,eAAe,GAAGX,aAAa,EAArC;AAEP,OAAO,IAAMY,uBAAuB,GAAG,SAA1BA,uBAA0B,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAErD,gBAAoCX,QAAQ,CAAC,KAAD,CAA5C;EAAA;EAAA,IAAOY,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAA4Bb,QAAQ,CAAC,IAAD,CAApC;EAAA;EAAA,IAAOc,MAAP;EAAA,IAAeC,SAAf;;EAEAhB,SAAS,CAAC,YAAM;IACZO,kBAAkB,CAACF,IAAD,EAAO,UAACY,IAAD,EAAU;MAC/B,IAAIA,IAAJ,EAAU;QAGN,IAAMC,GAAG,GAAGD,IAAI,CAACC,GAAjB;QACAJ,aAAa,CAAC,IAAD,CAAb;QACAE,SAAS,CAACE,GAAD,CAAT;MAEH,CAPD,MAOO;QAGHJ,aAAa,CAAC,KAAD,CAAb;MACH;IACA,CAba,CAAlB;EAcH,CAfQ,EAeP,EAfO,CAAT;EAiBA,OACI,KAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAC7BD,UAAU,EAAEA,UADiB;MAE7BE,MAAM,EAAEA;IAFqB,CAAjC;IAAA,UAIKH;EAJL,EADJ;AASH,CA/BM"},"metadata":{},"sourceType":"module"}