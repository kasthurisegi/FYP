{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from 'react';\nimport react, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar images = ['../assets/SigninBackground.jpg', '../assets/kitchen.jpg', '../assets/room.jpg'];\nvar WIDTH = Dimensions.get('window').width;\nvar HEIGHT = Dimensions.get('window').height;\nvar RoomViewPostScreen = function RoomViewPostScreen() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    imageActive = _useState2[0],\n    setimageActive = _useState2[1];\n  onchange = function onchange(nativeEvent) {\n    if (nativeEvent) {\n      var slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\n      if (slide != imageActive) {\n        setimageActive(slide);\n      }\n    }\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.wrap,\n      children: [_jsx(ScrollView, {\n        onScroll: function onScroll(_ref) {\n          var nativeEvent = _ref.nativeEvent;\n          return onchange(nativeEvent);\n        },\n        showsHorizontalScrollIndicator: false,\n        pagingEnabled: true,\n        horizontal: true,\n        style: styles.wrap,\n        children: images.map(function (e, index) {\n          return _jsx(Image, {\n            resizeMode: \"stretch\",\n            style: styles.wrap,\n            source: {\n              uri: e\n            }\n          }, e);\n        })\n      }), _jsx(View, {\n        style: styles.wrapDot,\n        children: images.map(function (e, index) {\n          return _jsx(Text, {\n            style: imageActive == index ? styles.dotActive : styles.dot,\n            children: \"\\u25CF\"\n          }, e);\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  wrap: {\n    width: WIDTH,\n    height: HEIGHT * 0.25\n  },\n  wrapDot: {\n    position: 'absolute',\n    bottom: 0,\n    flexDirection: 'row',\n    alignSelf: 'center'\n  },\n  dotActive: {\n    margin: 3,\n    color: 'black'\n  },\n  dot: {\n    margin: 3,\n    color: 'grey'\n  }\n});\nexport default RoomViewPostScreen;","map":{"version":3,"names":["React","react","useState","images","WIDTH","Dimensions","get","width","HEIGHT","height","RoomViewPostScreen","imageActive","setimageActive","onchange","nativeEvent","slide","Math","ceil","contentOffset","x","layoutMeasurement","styles","container","wrap","map","e","index","uri","wrapDot","dotActive","dot","StyleSheet","create","flex","position","bottom","flexDirection","alignSelf","margin","color"],"sources":["C:/Users/kasthuri/Desktop/roomarch/roomarch/src/containers/RoomViewPostScreen.js"],"sourcesContent":["import { SafeAreaView,StyleSheet, ScrollView, View, Text, Dimensions, Image } from 'react-native'\r\nimport React from 'react'\r\nimport react, {useState} from 'react'\r\n\r\nconst images = [\r\n  '../assets/SigninBackground.jpg',\r\n  '../assets/kitchen.jpg',\r\n  '../assets/room.jpg',\r\n]\r\n\r\nconst WIDTH = Dimensions.get('window').width\r\nconst HEIGHT = Dimensions.get('window').height\r\n\r\nconst RoomViewPostScreen = () => {\r\n  const [imageActive, setimageActive] = useState(0)\r\n\r\n  onchange = (nativeEvent) => {\r\n    if (nativeEvent) {\r\n      const slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width)\r\n      if (slide != imageActive) {setimageActive(slide)}\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style= {styles.container}>\r\n        <View style= {styles.wrap}>\r\n        <ScrollView\r\n          onScroll={({nativeEvent}) => onchange(nativeEvent)}\r\n          showsHorizontalScrollIndicator={false}\r\n          pagingEnabled\r\n          horizontal\r\n          style={styles.wrap}\r\n          >\r\n\r\n          {\r\n            images.map((e, index) => \r\n            \r\n            <Image \r\n              key={e}\r\n              resizeMode='stretch'\r\n              style={styles.wrap}\r\n              source={{uri: e}}\r\n              \r\n              />\r\n              \r\n            \r\n            )\r\n          }\r\n\r\n        </ScrollView>\r\n          <View style={styles.wrapDot}>\r\n            {\r\n              images.map((e, index) =>\r\n              <Text \r\n              key={e} \r\n              style={imageActive == index ? styles.dotActive : styles.dot}\r\n              \r\n              >‚óè</Text>\r\n\r\n              )\r\n            }\r\n          </View>\r\n        </View>\r\n\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n      container: {\r\n        flex: 1\r\n      },\r\n\r\n      wrap: {\r\n        width: WIDTH,\r\n        height: HEIGHT * 0.25,\r\n      },\r\n\r\n      wrapDot: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        flexDirection: 'row',\r\n        alignSelf: 'center',\r\n      },\r\n      \r\n      dotActive: {\r\n        margin: 3,\r\n        color: 'black',\r\n      },\r\n\r\n      dot: {\r\n        margin: 3,\r\n        color: 'grey',\r\n\r\n      }\r\n  }\r\n)\r\n\r\n\r\nexport default RoomViewPostScreen"],"mappings":";;;;;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAErC,IAAMC,MAAM,GAAG,CACb,gCAAgC,EAChC,uBAAuB,EACvB,oBAAoB,CACrB;AAED,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AAC5C,IAAMC,MAAM,GAAGH,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACG,MAAM;AAE9C,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,GAAS;EAC/B,gBAAsCR,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA1CS,WAAW;IAAEC,cAAc;EAElCC,QAAQ,GAAG,kBAACC,WAAW,EAAK;IAC1B,IAAIA,WAAW,EAAE;MACf,IAAMC,KAAK,GAAGC,IAAI,CAACC,IAAI,CAACH,WAAW,CAACI,aAAa,CAACC,CAAC,GAAGL,WAAW,CAACM,iBAAiB,CAACb,KAAK,CAAC;MAC1F,IAAIQ,KAAK,IAAIJ,WAAW,EAAE;QAACC,cAAc,CAACG,KAAK,CAAC;MAAA;IAClD;EACF,CAAC;EAED,OACE,KAAC,YAAY;IAAC,KAAK,EAAGM,MAAM,CAACC,SAAU;IAAA,UACnC,MAAC,IAAI;MAAC,KAAK,EAAGD,MAAM,CAACE,IAAK;MAAA,WAC1B,KAAC,UAAU;QACT,QAAQ,EAAE;UAAA,IAAET,WAAW,QAAXA,WAAW;UAAA,OAAMD,QAAQ,CAACC,WAAW,CAAC;QAAA,CAAC;QACnD,8BAA8B,EAAE,KAAM;QACtC,aAAa;QACb,UAAU;QACV,KAAK,EAAEO,MAAM,CAACE,IAAK;QAAA,UAIjBpB,MAAM,CAACqB,GAAG,CAAC,UAACC,CAAC,EAAEC,KAAK;UAAA,OAEpB,KAAC,KAAK;YAEJ,UAAU,EAAC,SAAS;YACpB,KAAK,EAAEL,MAAM,CAACE,IAAK;YACnB,MAAM,EAAE;cAACI,GAAG,EAAEF;YAAC;UAAE,GAHZA,CAAC,CAKJ;QAAA;MAGH,EAGQ,EACX,KAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACO,OAAQ;QAAA,UAExBzB,MAAM,CAACqB,GAAG,CAAC,UAACC,CAAC,EAAEC,KAAK;UAAA,OACpB,KAAC,IAAI;YAEL,KAAK,EAAEf,WAAW,IAAIe,KAAK,GAAGL,MAAM,CAACQ,SAAS,GAAGR,MAAM,CAACS,GAAI;YAAA;UAAA,GADvDL,CAAC,CAGG;QAAA;MAER,EAEE;IAAA;EACF,EAEI;AAEnB,CAAC;AAED,IAAMJ,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAE3BV,SAAS,EAAE;IACTW,IAAI,EAAE;EACR,CAAC;EAEDV,IAAI,EAAE;IACJhB,KAAK,EAAEH,KAAK;IACZK,MAAM,EAAED,MAAM,GAAG;EACnB,CAAC;EAEDoB,OAAO,EAAE;IACPM,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,CAAC;IACTC,aAAa,EAAE,KAAK;IACpBC,SAAS,EAAE;EACb,CAAC;EAEDR,SAAS,EAAE;IACTS,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;EACT,CAAC;EAEDT,GAAG,EAAE;IACHQ,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;EAET;AACJ,CAAC,CACF;AAGD,eAAe7B,kBAAkB"},"metadata":{},"sourceType":"module"}