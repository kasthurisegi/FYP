{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Index = function Index() {\n  return _jsx(UserInfoContextProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            headerShown: false,\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === 'Home') {\n                iconName = \"home\";\n              } else if (route.name === 'Favourite') {\n                iconName = \"star\";\n              } else if (route.name === 'Profile') {\n                iconName = \"person\";\n              }\n\n              ;\n              return _jsx(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color\n              });\n            },\n            tabBarActiveTintColor: '#6E4119',\n            tabBarInactiveTintColor: 'black',\n            tabBarInactiveBackgroundColor: '#FFEDDD',\n            tabBarActiveBackgroundColor: '#D6B598'\n          };\n        },\n        children: [_jsx(Tab.Screen, {\n          name: \"Profile\",\n          component: ProfileStack\n        }), _jsx(Tab.Screen, {\n          name: \"Home\",\n          component: HomeStack\n        }), _jsx(Tab.Screen, {\n          name: \"Favourite\",\n          component: FavouriteStack\n        }), _jsx(Tab.Screen, {\n          name: \"Login\",\n          component: LoginStack\n        })]\n      })\n    })\n  });\n};\n\nexport default Index;","map":{"version":3,"names":["React","Index","route","headerShown","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarInactiveBackgroundColor","tabBarActiveBackgroundColor","ProfileStack","HomeStack","FavouriteStack","LoginStack"],"sources":["/Users/eason/Desktop/git-project/FYP/Index.js"],"sourcesContent":["import { View, Text } from 'react-native'\nimport React from 'react'\n\nconst Index = () => {\n  return (\n    <UserInfoContextProvider>\n      <NavigationContainer>\n\n        <Tab.Navigator\n          screenOptions={({ route }) => ({ \n            headerShown: false,\n            tabBarIcon: ({ focused, color, size }) => {\n\n              let iconName;\n\n              if (route.name === 'Home') {\n                iconName = \"home\"\n              } else if (route.name === 'Favourite') {\n                iconName = \"star\"\n              } else if (route.name === 'Profile') {\n                iconName = \"person\"\n              };\n              \n              // You can return any component that you like here!\n              return <Ionicons name={iconName} size={size} color={color} />;\n                      \n            },\n            tabBarActiveTintColor: '#6E4119',\n            tabBarInactiveTintColor: 'black',\n            tabBarInactiveBackgroundColor: '#FFEDDD',\n            tabBarActiveBackgroundColor: '#D6B598',\n            \n          })}\n        >\n              <Tab.Screen name=\"Profile\" component={ProfileStack} />\n              <Tab.Screen name=\"Home\" component={HomeStack} />\n              <Tab.Screen name=\"Favourite\" component={FavouriteStack} />\n\n              <Tab.Screen name=\"Login\" component={LoginStack}/>\n          \n        </Tab.Navigator>\n      </NavigationContainer>\n    </UserInfoContextProvider>\n  )\n}\n\nexport default Index"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;EAClB,OACE,KAAC,uBAAD;IAAA,UACE,KAAC,mBAAD;MAAA,UAEE,MAAC,GAAD,CAAK,SAAL;QACE,aAAa,EAAE;UAAA,IAAGC,KAAH,QAAGA,KAAH;UAAA,OAAgB;YAC7BC,WAAW,EAAE,KADgB;YAE7BC,UAAU,EAAE,2BAA8B;cAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;cAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;cAAA,IAAXC,IAAW,SAAXA,IAAW;cAExC,IAAIC,QAAJ;;cAEA,IAAIN,KAAK,CAACO,IAAN,KAAe,MAAnB,EAA2B;gBACzBD,QAAQ,GAAG,MAAX;cACD,CAFD,MAEO,IAAIN,KAAK,CAACO,IAAN,KAAe,WAAnB,EAAgC;gBACrCD,QAAQ,GAAG,MAAX;cACD,CAFM,MAEA,IAAIN,KAAK,CAACO,IAAN,KAAe,SAAnB,EAA8B;gBACnCD,QAAQ,GAAG,QAAX;cACD;;cAAA;cAGD,OAAO,KAAC,QAAD;gBAAU,IAAI,EAAEA,QAAhB;gBAA0B,IAAI,EAAED,IAAhC;gBAAsC,KAAK,EAAED;cAA7C,EAAP;YAED,CAjB4B;YAkB7BI,qBAAqB,EAAE,SAlBM;YAmB7BC,uBAAuB,EAAE,OAnBI;YAoB7BC,6BAA6B,EAAE,SApBF;YAqB7BC,2BAA2B,EAAE;UArBA,CAAhB;QAAA,CADjB;QAAA,WA0BM,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,SAAjB;UAA2B,SAAS,EAAEC;QAAtC,EA1BN,EA2BM,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,MAAjB;UAAwB,SAAS,EAAEC;QAAnC,EA3BN,EA4BM,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,WAAjB;UAA6B,SAAS,EAAEC;QAAxC,EA5BN,EA8BM,KAAC,GAAD,CAAK,MAAL;UAAY,IAAI,EAAC,OAAjB;UAAyB,SAAS,EAAEC;QAApC,EA9BN;MAAA;IAFF;EADF,EADF;AAwCD,CAzCD;;AA2CA,eAAehB,KAAf"},"metadata":{},"sourceType":"module"}