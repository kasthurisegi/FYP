{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useEffect, useState, useReducer, useContext, useRef } from \"react\";\nimport { auth, db } from \"../../FirebaseConfig\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getDoc, onSnapshot, collection, query, where } from \"firebase/firestore\";\nimport { UserInfoContext } from \"./userInfoContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var DataProcessorContext = createContext();\nexport var DataProcessorContextProvider = function DataProcessorContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useContext = useContext(UserInfoContext),\n      userID = _useContext.userID;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roommate = _useState4[0],\n      setRoommate = _useState4[1];\n\n  useEffect(function () {\n    function getData() {\n      if (userID) {\n        var unsub = onSnapshot(doc(db, \"users\", userID), function (doc) {\n          setCurrentUser(doc.data());\n          return;\n        });\n        return function () {\n          unsub;\n        };\n      }\n    }\n\n    userID && getData();\n  }, [userID]);\n  useEffect(function () {\n    var q = query(collection(db, \"roommates\"), where(\"roommateID\", \"!=\", \"\"));\n    var unsubscribe = onSnapshot(q, function (querySnapshot) {\n      var roommates = [];\n      querySnapshot.forEach(function (doc) {\n        roommates.push(doc.data());\n      });\n      setRoommate(roommates);\n    });\n    return function () {\n      unsubscribe;\n    };\n  }, []);\n  console.log(roommate);\n  return _jsx(DataProcessorContext.Provider, {\n    value: {\n      currentUser: currentUser,\n      roommate: roommate\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useEffect","useState","useReducer","useContext","useRef","auth","db","onAuthStateChanged","doc","getDoc","onSnapshot","collection","query","where","UserInfoContext","DataProcessorContext","DataProcessorContextProvider","children","userID","currentUser","setCurrentUser","roommate","setRoommate","getData","unsub","data","q","unsubscribe","querySnapshot","roommates","forEach","push","console","log"],"sources":["/Users/eason/Desktop/git-project/FYP/src/context/DataProcessor.js"],"sourcesContent":["\nimport React, { createContext, useEffect, useState, useReducer, useContext, useRef } from \"react\";\nimport { auth, db } from \"../../FirebaseConfig\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { doc, getDoc, onSnapshot, collection, query, where } from \"firebase/firestore\";\nimport { UserInfoContext } from \"./userInfoContext\";\n\nexport const DataProcessorContext = createContext();\n\nexport const DataProcessorContextProvider = ({ children }) => {\n\n    const { userID } = useContext(UserInfoContext);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [roommate, setRoommate] = useState(null);\n\n    useEffect(() => {\n        function getData() { \n            if(userID){\n                const unsub = onSnapshot(doc(db, \"users\", userID), (doc) => {\n                    setCurrentUser(doc.data())\n                    return;\n                });\n\n                return () => {\n                    unsub\n                }\n            }\n        }\n\n        userID && getData();\n    },[userID]);\n\n    useEffect(() => {\n\n        const q = query(collection(db, \"roommates\"), where(\"roommateID\", \"!=\", \"\"));\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\n        const roommates = [];\n        querySnapshot.forEach((doc) => {\n            roommates.push(doc.data());\n        });\n        setRoommate(roommates)\n        });\n\n        return () => {\n            unsubscribe\n        }\n\n    },[]);\n\n    console.log(roommate)\n\n    return (\n        <DataProcessorContext.Provider value={{\n            currentUser: currentUser,\n            roommate: roommate\n        }}>\n            {children}\n        </DataProcessorContext.Provider>\n    );\n\n};"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,EAAoDC,UAApD,EAAgEC,UAAhE,EAA4EC,MAA5E,QAA0F,OAA1F;AACA,SAASC,IAAT,EAAeC,EAAf;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,EAAkCC,UAAlC,EAA8CC,KAA9C,EAAqDC,KAArD,QAAkE,oBAAlE;AACA,SAASC,eAAT;;AAEA,OAAO,IAAMC,oBAAoB,GAAGhB,aAAa,EAA1C;AAEP,OAAO,IAAMiB,4BAA4B,GAAG,SAA/BA,4BAA+B,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAE1D,kBAAmBd,UAAU,CAACW,eAAD,CAA7B;EAAA,IAAQI,MAAR,eAAQA,MAAR;;EACA,gBAAsCjB,QAAQ,CAAC,IAAD,CAA9C;EAAA;EAAA,IAAOkB,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAAgCnB,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOoB,QAAP;EAAA,IAAiBC,WAAjB;;EAEAtB,SAAS,CAAC,YAAM;IACZ,SAASuB,OAAT,GAAmB;MACf,IAAGL,MAAH,EAAU;QACN,IAAMM,KAAK,GAAGd,UAAU,CAACF,GAAG,CAACF,EAAD,EAAK,OAAL,EAAcY,MAAd,CAAJ,EAA2B,UAACV,GAAD,EAAS;UACxDY,cAAc,CAACZ,GAAG,CAACiB,IAAJ,EAAD,CAAd;UACA;QACH,CAHuB,CAAxB;QAKA,OAAO,YAAM;UACTD,KAAK;QACR,CAFD;MAGH;IACJ;;IAEDN,MAAM,IAAIK,OAAO,EAAjB;EACH,CAfQ,EAeP,CAACL,MAAD,CAfO,CAAT;EAiBAlB,SAAS,CAAC,YAAM;IAEZ,IAAM0B,CAAC,GAAGd,KAAK,CAACD,UAAU,CAACL,EAAD,EAAK,WAAL,CAAX,EAA8BO,KAAK,CAAC,YAAD,EAAe,IAAf,EAAqB,EAArB,CAAnC,CAAf;IACA,IAAMc,WAAW,GAAGjB,UAAU,CAACgB,CAAD,EAAI,UAACE,aAAD,EAAmB;MACrD,IAAMC,SAAS,GAAG,EAAlB;MACAD,aAAa,CAACE,OAAd,CAAsB,UAACtB,GAAD,EAAS;QAC3BqB,SAAS,CAACE,IAAV,CAAevB,GAAG,CAACiB,IAAJ,EAAf;MACH,CAFD;MAGAH,WAAW,CAACO,SAAD,CAAX;IACC,CAN6B,CAA9B;IAQA,OAAO,YAAM;MACTF,WAAW;IACd,CAFD;EAIH,CAfQ,EAeP,EAfO,CAAT;EAiBAK,OAAO,CAACC,GAAR,CAAYZ,QAAZ;EAEA,OACI,KAAC,oBAAD,CAAsB,QAAtB;IAA+B,KAAK,EAAE;MAClCF,WAAW,EAAEA,WADqB;MAElCE,QAAQ,EAAEA;IAFwB,CAAtC;IAAA,UAIKJ;EAJL,EADJ;AASH,CAnDM"},"metadata":{},"sourceType":"module"}