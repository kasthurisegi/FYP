{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UploadImage() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    image = _useState2[0],\n    setImage = _useState2[1];\n  var addImage = function addImage() {};\n  return _jsxs(View, {\n    style: imageUploaderStyles.container,\n    children: [image && _jsx(Image, {\n      source: {\n        uri: image\n      },\n      style: {\n        width: 200,\n        height: 200\n      }\n    }), _jsx(View, {\n      style: imageUploaderStyles.uploadBtnContainer,\n      children: _jsxs(TouchableOpacity, {\n        onPress: addImage,\n        style: imageUploaderStyles.uploadBtn,\n        children: [_jsxs(Text, {\n          children: [image ? 'Edit' : 'Upload', \" Image\"]\n        }), _jsx(AntDesign, {\n          name: \"camera\",\n          size: 20,\n          color: \"black\"\n        })]\n      })\n    })]\n  });\n}\nvar imageUploaderStyles = StyleSheet.create({\n  container: {\n    elevation: 2,\n    height: 200,\n    width: 200,\n    backgroundColor: '#efefef',\n    position: 'relative',\n    borderRadius: 999,\n    overflow: 'hidden'\n  },\n  uploadBtnContainer: {\n    opacity: 0.7,\n    position: 'absolute',\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'lightgrey',\n    width: '100%',\n    height: '25%'\n  },\n  uploadBtn: {\n    display: 'flex',\n    alignItems: \"center\",\n    justifyContent: 'center'\n  }\n});\nexport default AddRoommateScreen;","map":{"version":3,"names":["React","useState","useEffect","AntDesign","UploadImage","image","setImage","addImage","imageUploaderStyles","container","uri","width","height","uploadBtnContainer","uploadBtn","StyleSheet","create","elevation","backgroundColor","position","borderRadius","overflow","opacity","right","bottom","display","alignItems","justifyContent","AddRoommateScreen"],"sources":["C:/Users/kasthuri/Desktop/roomarch/FYP/src/containers/AddRoommateScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Image, View, Platform, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\n\r\nfunction UploadImage() {\r\n  const [image, setImage] = useState(null);\r\n  const addImage=()=>{};\r\n  return (\r\n            <View style={imageUploaderStyles.container}>\r\n                {\r\n                    image  && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />\r\n                }\r\n                    <View style={imageUploaderStyles.uploadBtnContainer}>\r\n                        <TouchableOpacity onPress={addImage} style={imageUploaderStyles.uploadBtn} >\r\n                            <Text>{image ? 'Edit' : 'Upload'} Image</Text>\r\n                            <AntDesign name=\"camera\" size={20} color=\"black\" />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n            </View>\r\n  );\r\n}\r\nconst imageUploaderStyles=StyleSheet.create({\r\n    container:{\r\n        elevation:2,\r\n        height:200,\r\n        width:200,\r\n        backgroundColor:'#efefef',\r\n        position:'relative',\r\n        borderRadius:999,\r\n        overflow:'hidden',\r\n    },\r\n    uploadBtnContainer:{\r\n        opacity:0.7,\r\n        position:'absolute',\r\n        right:0,\r\n        bottom:0,\r\n        backgroundColor:'lightgrey',\r\n        width:'100%',\r\n        height:'25%',\r\n    },\r\n    uploadBtn:{\r\n        display:'flex',\r\n        alignItems:\"center\",\r\n        justifyContent:'center'\r\n    }\r\n})\r\n\r\n\r\nexport default AddRoommateScreen\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnD,SAASC,SAAS,QAAQ,oBAAoB;AAAC;AAAA;AAG/C,SAASC,WAAW,GAAG;EACrB,gBAA0BH,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCI,KAAK;IAAEC,QAAQ;EACtB,IAAMC,QAAQ,GAAC,SAATA,QAAQ,GAAK,CAAC,CAAC;EACrB,OACU,MAAC,IAAI;IAAC,KAAK,EAAEC,mBAAmB,CAACC,SAAU;IAAA,WAEnCJ,KAAK,IAAK,KAAC,KAAK;MAAC,MAAM,EAAE;QAAEK,GAAG,EAAEL;MAAM,CAAE;MAAC,KAAK,EAAE;QAAEM,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI;IAAE,EAAG,EAE/E,KAAC,IAAI;MAAC,KAAK,EAAEJ,mBAAmB,CAACK,kBAAmB;MAAA,UAChD,MAAC,gBAAgB;QAAC,OAAO,EAAEN,QAAS;QAAC,KAAK,EAAEC,mBAAmB,CAACM,SAAU;QAAA,WACtE,MAAC,IAAI;UAAA,WAAET,KAAK,GAAG,MAAM,GAAG,QAAQ;QAAA,EAAc,EAC9C,KAAC,SAAS;UAAC,IAAI,EAAC,QAAQ;UAAC,IAAI,EAAE,EAAG;UAAC,KAAK,EAAC;QAAO,EAAG;MAAA;IACpC,EAChB;EAAA,EACR;AAEnB;AACA,IAAMG,mBAAmB,GAACO,UAAU,CAACC,MAAM,CAAC;EACxCP,SAAS,EAAC;IACNQ,SAAS,EAAC,CAAC;IACXL,MAAM,EAAC,GAAG;IACVD,KAAK,EAAC,GAAG;IACTO,eAAe,EAAC,SAAS;IACzBC,QAAQ,EAAC,UAAU;IACnBC,YAAY,EAAC,GAAG;IAChBC,QAAQ,EAAC;EACb,CAAC;EACDR,kBAAkB,EAAC;IACfS,OAAO,EAAC,GAAG;IACXH,QAAQ,EAAC,UAAU;IACnBI,KAAK,EAAC,CAAC;IACPC,MAAM,EAAC,CAAC;IACRN,eAAe,EAAC,WAAW;IAC3BP,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC;EACX,CAAC;EACDE,SAAS,EAAC;IACNW,OAAO,EAAC,MAAM;IACdC,UAAU,EAAC,QAAQ;IACnBC,cAAc,EAAC;EACnB;AACJ,CAAC,CAAC;AAGF,eAAeC,iBAAiB"},"metadata":{},"sourceType":"module"}